AboutText=Made with Eclipse Scout {0}.\r\n<p>\r\nPlease see <a href\="https\://eclipsescout.github.io/">https\://eclipsescout.github.io</a> for documentation and other resources.\r\n</p>
Accordion=Accordion
AccordionTextGroup=This is the body of the current group. You can use any widget as body, in this case a LabelField is used.\r\nEvery group in an accordion is as height as its content.
AddRow=Add row
AppDescription=Here you will find a demonstration of the Scout JS widgets. You can try them out and get a feel of how they are used. You should also try to adjust some properties and see what happens. Every widget comes with default settings but most of them are configurable to serve different purposes.\n<p>\nEvery widget page is structured the same way\: You will find the widget itself on top of the page. On the bottom is the configuration area where you can adjust the properties, execute actions or listen for events.\n<p>\nIn fact this application is not only supposed to show you the widgets but may also serve you as API reference. You can see what is possible and how the widgets are used.\n<p>\nAll the code is available on <a href\="https\://github.com/BSI-Business-Systems-Integration-AG/org.eclipse.scout.docs/tree/releases/{0}.x/code/widgets/org.eclipse.scout.jswidgets.ui.html">GitHub</a>.\n<p>\nYou should also check out the documentation about Scout JS in the <a href\="https\://eclipsescout.github.io/{0}/technical-guide-js.html">technical guide</a>.\n<p>\nHave fun\!\n
AppWelcome=Welcome to the Scout JS Widgets Application
AskToSaveChangesOnCancel=Ask to save changes on cancel
AutoDateTooltip=The auto date is the date which is preselected when the user clicks in an empty date field or presses the up or down key.\r\nIf the auto date is null, the current day is used instead.
AutoOptimizeColumnWidthsTooltip=If set on a column, the column will always be as width as its content. If not set, the user can still optimize the width manually by double clicking the separator between two columns.
AutoResizeColumnsTooltip=If set, the columns will take all the available width of the table. The configured width of the columns is used as weight for the width calculation and also as minimal width.
BlockFormatTooltip=Using a formatter and parser you can adjust the text the user typed.\r\nTry it by selecting this check box and entering a long string into the string field (like 12345678).
ButtonClickMessage=The button action may be triggered by clicking the button, pressing space or enter or by pressing the configured key stroke.
Calculator=Calculator
CancelMenuTooltip=Closes the form if there are no changes made. Otherwise it shows a message box asking to save the changes.
Carousel=Carousel
ClearEventLog=Clear event log
CloseMenuTooltip=Closes the form and discards any unsaved changes.
DateField=Date Field
DeleteRow=Delete row
EventLog=Event Log
EventsDescription=The following events are available for this widget\:\n{0}
EventsOverview=Every widget can trigger events. Events are the result of actions, like clicking a button or deleting a row in a table. Changing a property will result in an event, too, a so called property change event.\n<br>You can listen for events by attaching an event handler. The event log below uses such an event handler and displays every triggered event for this widget. Try to interact with the widget or adjust some properties and see what happens.\n<p>\nCheck out the <a href\="https\://eclipsescout.github.io/{0}/technical-guide-js.html\#events">technical guide</a> for more details.\n</p>
ExceptionWhileSaving=Exception while saving
ExclusiveExpandTooltip=If checked, only one group may be expanded at the same time
ExpandTreeNodes=Expand tree nodes
FileChooserAcceptTypesTooltip=Examples\:\r\naudio/*\r\nvideo/*\r\nimage/*\r\n.mp4
FileChooserChosenFiles=Chosen files
FileChooserMaximumUploadSizeTooltip=Maximum file size in bytes that is accepted by the file chooser field.
FileChooserNFilesChosen={0} files chosen\:
FileChooserNoFilesChosen=No files chosen
FileChooserOneFileChosen=One file chosen\:
FilterBy=Filter by...
FocusTooltip=Tries to set the focus on the widget.\r\n\r\nReturns true if the element could be focused, false if not.
Form=Form
FormFieldStatusMessage=This is a status with severity {0}
FormFields=Form Fields
GroupBox=Group Box
GroupBoxScrollableTooltip=If set, the group box will show vertical scrollbars when it is too small to display all the content. If the property is not set explicitly, only the main box will be scrollable by default.\r\n\r\nWhen setting the property to true, remember to fix the height of the group box because the group box is by default as height as its content (useUiHeight is true).
GroupNo=Group no.
GroupingStyle=Grouping style
GroupingStyleBottom=Bottom
GroupingStyleTop=Top
HasCloseButton=Has close button
HasCloseButtonTooltip=If the form has a close button, pressing the "x" icon will call close(), otherwise cancel() is called which will show a message if there are unsaved changes.
HierarchicalTableField=Hierarchical Table Field
LabelFieldValue=This is the value of a label field
LanguageTagShort=Tag
LifecycleData=Life cycle data
LoadIncremental=Load incremental
Locale=Locale
LogicalGrid=Logical Grid
LogicalGridTooltip=The logical grid defines, how the fields are arranged inside the container.\r\n\r\nThe Horizontal Grid arranges them from left to right.\r\nThe Vertical Grid arranges them from top to bottom.
LogicalGridWithRefTooltip=The logical grid defines, how the fields are arranged inside the container.\r\n\r\nThe Horizontal Grid arranges them from left to right.\r\nThe Vertical Grid arranges them from top to bottom.\r\n\r\nSee also the Logical Grid demo to get a feeling what the individual grid data properties mean.
MenuBar=Menu Bar
MenuStackableTooltipText=If this property is set to true, the menu will be put into an ellipsis menu if there is not enough space to display it. You can try it out by making the browser window smaller.
Move=Move
MoveDown=Move down
MoveToBottom=Move to bottom
MoveToTop=Move to top
MoveUp=Move up
MultilineSmartField=Multiline Smart Field
NewLanguageMenu=Add new language
NewLanguageMessage=Unfortunately I cannot really add a language because I am here for demonstration purposes only.
NotificationMessage=This is a notification with severity {0}
NumberColumn=Number Column
NumberField=Number Field
NumberFieldCalculatorHint=Every number field supports basic calculations, try it by entering a formula like 3+3 and press "tab".
OkMenuTooltip=Saves and closes the form.
OpenForm=Open form
OpenLifecycleForm=Open life cycle form
ProcessButtonTooltip=This property defines whether the button should be placed in the menu bar or in the group box body grid along with the other fields.
ProposalField=Proposal Field
ResetMenuTooltip=Resets the form to its initial state.
RevealTooltip=Brings the widget into view by scrolling the first scrollable parent. The action does not have any effect if the widget is already fully visible or there is no scrollbar. \r\n\r\nIn order to test it make the window smaller so that the scrollbar appears, then scroll the widget out of view and press the button.
RowName=Row name
RowNo=Row no.
Salutation=Salutation
SaveMenuTooltip=Saves the changes without closing the form.
SmartField=Smart Field
StatusMessage=This is a status with severity {0}
StringField=String Field
StringFieldHasActionMessage=If hasAction is true, the string field triggers an event called "action" when the icon is clicked.
TabBox=Tab Box
TableField=Table Field
Target=Target
Thanks=Thanks
ThanksForClickingMe=Thanks for clicking me\!
TileAccordion=Tile Accordion
TileField=Tile Field
TileGridStatus=Total tiles\: {0}, filtered\: {1}, selected\: {2}
TileGridVirtualTooltip=Virtual relates to the term "Virtual Scrolling". This means, only the tiles in the view port and some more will be rendered. The others will be rendered as soon as they will be moved into the view port, either by scrolling or by any other action like sorting, filtering etc.\r\n\r\nThis can lead to a big performance boost when having many tiles, especially on Internet Explorer, but other browsers benefit as well.\r\n\r\nTo make Virtual Scrolling work, the real width and height needs to be known so that scroll bar position can be calculated correctly. This means Virtual Scrolling does only work if all tiles have the same size, so the following grid properties cannot be used\: useUiWidth, useUiHeight, widthInPixel, heightInPixel, w, h, x, y.\r\n\r\nIf these preconditions are given, you can use the virtual mode and your grid will be able to handle a lot of tiles.
TileTypeTooltip=The type of newly inserted tiles.\r\n\r\nThe content and visualization of a tile heavily depends on the use case. If you just want to display some data in a tile grid without the need of a custom styling and elaborated tile layout you can use a HtmlTile with the default display style.\r\n\r\nIf you want more control over the styling, just set a custom CSS class and add some rules. If you don't like the default rules you can also set the display style to PLAIN so that these default styles are not applied.\r\n\r\nIf you want even more control about the layout and content you can create a custom tile instead of using the HtmlTile as it is done here with CustomTile.js.
Toggle=Toggle
ToggleGroupNoColumn=Toggle Group no. column
TreeSmartField=Tree Smart Field
Widgets=Widgets
WorldRegion=World region
